{"ast":null,"code":"import _classCallCheck from \"/Users/rebekahpark/Desktop/Projects4/graphql-playlist/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rebekahpark/Desktop/Projects4/graphql-playlist/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rebekahpark/Desktop/Projects4/graphql-playlist/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rebekahpark/Desktop/Projects4/graphql-playlist/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rebekahpark/Desktop/Projects4/graphql-playlist/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/rebekahpark/Desktop/Projects4/graphql-playlist/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/rebekahpark/Desktop/Projects4/graphql-playlist/client/src/components/BookList.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    {\\n        books {\\n            name\\n            id\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { gql } from 'apollo-boost'; // query에 있는 data 정의 시 사용\n\nimport { graphql } from 'react-apollo'; // react Component와 graphQl Query를 묶어줄때 사용\n\nvar getBookQuery = gql(_templateObject());\n\nvar BookList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BookList, _Component);\n\n  function BookList() {\n    _classCallCheck(this, BookList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BookList).apply(this, arguments));\n  }\n\n  _createClass(BookList, [{\n    key: \"displayBooks\",\n    value: function displayBooks() {\n      var data = this.props.data; // 오직 data property 만을 이용해야한다.(불러오는것중에 console.log 확인)-> this.props.data\n\n      if (data.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"Loading Books\");\n      } else {\n        return data.books.map(function (book) {\n          return React.createElement(\"li\", {\n            key: book.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, book.name);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        id: \"book_list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.displayBooks()));\n    }\n  }]);\n\n  return BookList;\n}(Component);\n\nexport default graphql(getBookQuery)(BookList);","map":{"version":3,"sources":["/Users/rebekahpark/Desktop/Projects4/graphql-playlist/client/src/components/BookList.js"],"names":["React","Component","gql","graphql","getBookQuery","BookList","data","props","loading","books","map","book","id","name","console","log","displayBooks"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,cAApB,C,CAAoC;;AACpC,SAASC,OAAT,QAAwB,cAAxB,C,CAAwC;;AAExC,IAAMC,YAAY,GAAGF,GAAH,mBAAlB;;IASMG,Q;;;;;;;;;;;;;mCACa;AACX,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB,CADW,CACiB;;AAC5B,UAAGA,IAAI,CAACE,OAAR,EAAgB;AACZ,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ;AAGH,OAJD,MAIO;AACH,eAAOF,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI,EAAI;AAC1B,iBACI;AAAI,YAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAmBD,IAAI,CAACE,IAAxB,CADJ;AAGH,SAJM,CAAP;AAKE;AACT;;;6BAEQ;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKS,YAAL,EADL,CADJ,CADJ;AAOH;;;;EAzBkBf,S;;AA4BvB,eAAeE,OAAO,CAACC,YAAD,CAAP,CAAsBC,QAAtB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { gql } from 'apollo-boost'; // query에 있는 data 정의 시 사용\nimport { graphql } from 'react-apollo'; // react Component와 graphQl Query를 묶어줄때 사용\n\nconst getBookQuery = gql`\n    {\n        books {\n            name\n            id\n        }\n    }\n`\n\nclass BookList extends Component {\n    displayBooks() {\n        let data = this.props.data; // 오직 data property 만을 이용해야한다.(불러오는것중에 console.log 확인)-> this.props.data\n        if(data.loading){\n            return(\n                <div>Loading Books</div>\n            )\n        } else {\n            return data.books.map(book => {\n                return (\n                    <li key={book.id}>{book.name}</li>\n                )\n            }\n            )}\n    }\n\n    render() {\n        console.log(this.props);\n        return (\n            <div>\n                <ul id=\"book_list\">\n                    {this.displayBooks()}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default graphql(getBookQuery)(BookList);"]},"metadata":{},"sourceType":"module"}